<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
			http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
			http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-2.5.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">


	<!-- Scan for Jersey Rest Annotations and Spring Annotations -->
	<context:component-scan base-package="com.sitepk.*" />
	<context:annotation-config />
	<tx:annotation-driven />
	
	<!-- Where the properties files live -->
	<context:property-placeholder location="classpath*:/*.properties"/>
	
	<!--  Using dbcp (Data Base Connection Pooling) suitable for production use -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${database.driverClassName}"/>
        <property name="url" value="${database.url}"/>
        <property name="username" value="${database.username}"/>
        <property name="password" value="${database.password}"/>
    </bean>
 <!-- 
    <bean id="sessionFactory"
        class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="configLocation">
            <value>classpath:hibernate.cfg.xml</value>
        </property>
        <property name="configurationClass">
            <value>org.hibernate.cfg.AnnotationConfiguration</value>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${database.dialect}</prop>
                <prop key="hibernate.show_sql">${database.show_sql}</prop>
            </props>
        </property>
    </bean>
     -->
    <!--  
    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	-->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>
    
	<bean id="entityManagerFactory"  
        class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"  
        destroy-method="destroy">  
        <property name="dataSource" ref="dataSource" /> 
		<property name="loadTimeWeaver">
		    <bean class="org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver"/>
		 </property> 
        <property name="jpaVendorAdapter">  
            <bean  
                class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"> 
                <!--<property name="database" value="MYSQL"/> -->
                <property name="database" value="HSQL"/>  
                <!--<property name="generateDdl" value="true"/>-->
                <property name="showSql" value="true"/>  
            </bean>  
        </property>  
    </bean> 
    
    <bean id="search" class="com.sitepk.action.web.SearchSimilarSiteAction" scope="prototype">
    	 <property name="siteService" ref="siteService"/>
    </bean>  
</beans>


